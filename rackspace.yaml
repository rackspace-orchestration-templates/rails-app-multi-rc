schema-version: 1.0.0
application-family: Application Frameworks
application-name: Rails
flavor: Multiple Linux servers - RCv3
flavor-weight: 1
rackconnect: true
reach-info:
  icon-20x20: https://0b5294b243620310a700-e388a7f3aba385a925111b1fc6f680d4.ssl.cf2.rackcdn.com/rails-icon-20x20.png
  tattoo: https://0b5294b243620310a700-e388a7f3aba385a925111b1fc6f680d4.ssl.cf2.rackcdn.com/rails-tattoo.png
hidden_outputs:
  - private_key
  - db_admin_password
abstract: |
  Rails is a popular open-source web development framework for Ruby developers.
instructions: |
  #### Getting started

  Your application should be available on port 80 of each server, and of the
  load balancer this deployment creates.

  #### Where the application is deployed

  Your application is deployed [Capistrano](http://capistranorb.com/)-style
  into the home directory of the rails user in a directory based on the name
  of the git repo. As an example, when deploying from the repo
  `http://github.com/MyUser/myrepo.git` the deployment for the user id
  `rails` is placed in the following directory path:

    `/home/rails/myrepo/`

  Within this directory are two other directories, `shared` and `releases`,
  along with a symbolic link, `current`, to the deployed revision--
  `current` is the directory from which the application runs. The deployed
  revision will be cloned into `releases` in a directory named for
  the commit hash of the reference supplied. The `shared` directory contains
  files which may be common across releases, such as Gems and static assets
  produced by `rake assets:precompile`.

  #### Gems

  Gem dependencies are installed by running `bundle install --deployment`
  in the `current` directory. This requires a `Gemfile.lock` file in the root
  of the application repo.

  #### `rake` tasks

  Two rake tasks are run at deployment time: `rake db:migrate` followed by
  `rake assets:precompile`. Additional rake tasks will be run if provided in
  the `rails_rake_tasks` parameter.

  #### Unicorn

  If you are using unicorn it must be declared in the application's Gemfile.

  A unicorn.rb file is generated and placed in the application's
  config directory (which is linked into the current release deployment
  directory) along with a `database.yml` file configured to reference
  the deployment's database server.

  #### Logging in via SSH
  The private key provided in the passwords section can be used to login as
  root via SSH. We have an article on how to use these keys with [Mac OS X and
  Linux](http://www.rackspace.com/knowledge_center/article/logging-in-with-a-ssh-private-key-on-linuxmac)
  as well as [Windows using
  PuTTY](http://www.rackspace.com/knowledge_center/article/logging-in-with-a-ssh-private-key-on-windows).
user-input-required: true
description: |
  ####Multiple Linux servers - RCv3
  Multiple load balanced Linux servers running [Rails](http://rubyonrails.org/)
  and a backend database server running [MySQL 5.5](http://www.mysql.com/) or
  [Postgres 9.1](http://www.postgresql.org/). This deployment is intended for
  development and production use cases incurring medium to high traffic
  scenarios. This deployment is easily scalable and is appropriate for high
  traffic events.

  This template will only function with RackConnect v3.
